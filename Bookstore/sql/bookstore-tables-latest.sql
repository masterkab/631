create database if not exists bookstore;

use bookstore;

drop table if exists books;

/* This is the books table.  It contains the master list of books
currently for sale.  The ISBN number is the primary key.  Some fields
are optional. */

/* 11-16-15 
	Changed pubyear to numeric from integer 
	Removed unnecessary () from int
*/
create table books (
	isbn		char(14) unique not null primary key,
	title		char(80) not null,
	author		char(80) not null,
	subject		char(80) not null,
	pubyear		year,
	description	char(255),
	imageurl	char(128),
	quantity	int not null,
	supplier	char(40),
	price		numeric(10,2) not null,
	buyerdate	date
);

drop table if exists users;

/* This is the users table.  It unifies customers and admins.
Observe that the credit card number and types can be null, since
some customers may not be comfortable with leaving their credit
card numbers on a system.  Also, why would employees (admins)
need to leave a credit card number? 

The password value is generated by a call to crypt(), a 
built-in PHP function.  One never stores a plain text password. */

/* 11-16-15
	Changed ints to remove () brackets - unnecessary */

create table users (
	username	char(16) unique not null primary key,
	lastname	char(30) not null,
	firstname	char(30) not null,
	address		char(50) not null,
	city		char(30) not null,
	state		char(2) not null,
	zip		int not null,
	telephone	char(10) not null,
	email		char(128) not null,
	passwdhash	text not null, 
	cctype		char(1), 
	ccnumber	numeric(16),
	ccexpdate	numeric(6),
	isenabled	char(1)  /* Y or N */
);

drop table if exists orders;

/* This is the orders table, otherwise known as the shopping basket.
Since we do not currently have an order details table, only one item
can occupy the shopping basket at any one time.  This should be fixed. 
Value for order status: o=open, c=completed, x=cancelled */

/* 11/16/15 -changed file 
	field orderqty to orderitems (count of items)
	remove orderisbn (now part of items table
*/
create table orders (
	ordernumber	int unique not null primary key,
	username	char(16) not null,
	orderdate	date not null,
	ordsecnum	numeric(4),
	orderstatus	char(1) not null, /* O, C, or X */
	orderitems	int not null,
	ordertotal	numeric(8,2) not null
);

drop table if exists items;

create table items (
	ordernumber	int not null,
	itemno		int not null,
	itemisbn	char(14) not null,
	itemqty		int not null,
	itemprice 	numeric(8,2) not null
);

drop table if exists carts;
/* carts table
  This table contains the items in each user's shopping cart.
  Note that the carts has its own itemprice field.  If you use this
  field, the user would be insulated against a price increase. 
  Conversely, they would not benefit from a price drop.
*/

create table carts (
	username	char(16) not null,
	itemno		int not null,
	itemisbn	char(14) not null,
	itemqty		int not null,
	itemprice	numeric(8,2) not null
);	

/* 11-16-15 
	Change: remove Cookies table.
	We will use PHP SESSIONS, rather than cookies to manage states */

drop table if exists admins;

create table admins (
    username  char(16) not null primary key,
    passwdhash text not null
);

